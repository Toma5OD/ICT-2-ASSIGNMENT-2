{"ast":null,"code":"var _jsxFileName = \"/Users/tomasodalaigh/Desktop/GitHub/ICT-2-ASSIGNMENT-2/src/pages/playlistMoviesPage.js\",\n    _this = this;\n\nimport React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromPlaylist from \"../components/cardIcons/removeFromPlaylist\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PlaylistMoviesPage = function PlaylistMoviesPage() {\n  var _useContext = useContext(MoviesContext),\n      movieIds = _useContext.mustWatch; // Create an array of queries and run in parallel.\n\n\n  var playlistMovieQueries = useQueries(movieIds.map(function (movieId) {\n    return {\n      queryKey: [\"movie\", {\n        id: movieId\n      }],\n      queryFn: getMovie\n    };\n  })); // Check if any of the parallel queries is still loading.\n\n  var isLoading = playlistMovieQueries.find(function (m) {\n    return m.isLoading === true;\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, _this);\n  }\n\n  var movies = playlistMovieQueries.map(function (q) {\n    q.data.genre_ids = q.data.genres.map(function (g) {\n      return g.id;\n    });\n    return q.data;\n  });\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Must Watch Movies\",\n    movies: movies,\n    action: function action(movie) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RemoveFromPlaylist, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(WriteReview, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default PlaylistMoviesPage;","map":{"version":3,"names":["React","useContext","PageTemplate","MoviesContext","useQueries","getMovie","Spinner","RemoveFromPlaylist","WriteReview","PlaylistMoviesPage","movieIds","mustWatch","playlistMovieQueries","map","movieId","queryKey","id","queryFn","isLoading","find","m","movies","q","data","genre_ids","genres","g","movie"],"sources":["/Users/tomasodalaigh/Desktop/GitHub/ICT-2-ASSIGNMENT-2/src/pages/playlistMoviesPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromPlaylist from \"../components/cardIcons/removeFromPlaylist\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\nconst PlaylistMoviesPage = () => {\n  const { mustWatch: movieIds } = useContext(MoviesContext);\n\n  // Create an array of queries and run in parallel.\n  const playlistMovieQueries = useQueries(\n    movieIds.map((movieId) => {\n      return {\n        queryKey: [\"movie\", { id: movieId }],\n        queryFn: getMovie,\n      };\n    })\n  );\n  // Check if any of the parallel queries is still loading.\n  const isLoading = playlistMovieQueries.find((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const movies = playlistMovieQueries.map((q) => {\n    q.data.genre_ids = q.data.genres.map((g) => g.id);\n    return q.data;\n  });\n\n  return (\n    <PageTemplate\n      title=\"Must Watch Movies\"\n      movies={movies}\n      action={(movie) => {\n        return (\n          <>\n            <RemoveFromPlaylist movie={movie} />\n            <WriteReview movie={movie} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default PlaylistMoviesPage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;EAC/B,kBAAgCR,UAAU,CAACE,aAAD,CAA1C;EAAA,IAAmBO,QAAnB,eAAQC,SAAR,CAD+B,CAG/B;;;EACA,IAAMC,oBAAoB,GAAGR,UAAU,CACrCM,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAa;IACxB,OAAO;MACLC,QAAQ,EAAE,CAAC,OAAD,EAAU;QAAEC,EAAE,EAAEF;MAAN,CAAV,CADL;MAELG,OAAO,EAAEZ;IAFJ,CAAP;EAID,CALD,CADqC,CAAvC,CAJ+B,CAY/B;;EACA,IAAMa,SAAS,GAAGN,oBAAoB,CAACO,IAArB,CAA0B,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACF,SAAF,KAAgB,IAAvB;EAAA,CAA1B,CAAlB;;EAEA,IAAIA,SAAJ,EAAe;IACb,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,SAAP;EACD;;EAED,IAAMG,MAAM,GAAGT,oBAAoB,CAACC,GAArB,CAAyB,UAACS,CAAD,EAAO;IAC7CA,CAAC,CAACC,IAAF,CAAOC,SAAP,GAAmBF,CAAC,CAACC,IAAF,CAAOE,MAAP,CAAcZ,GAAd,CAAkB,UAACa,CAAD;MAAA,OAAOA,CAAC,CAACV,EAAT;IAAA,CAAlB,CAAnB;IACA,OAAOM,CAAC,CAACC,IAAT;EACD,CAHc,CAAf;EAKA,oBACE,QAAC,YAAD;IACE,KAAK,EAAC,mBADR;IAEE,MAAM,EAAEF,MAFV;IAGE,MAAM,EAAE,gBAACM,KAAD,EAAW;MACjB,oBACE;QAAA,wBACE,QAAC,kBAAD;UAAoB,KAAK,EAAEA;QAA3B;UAAA;UAAA;UAAA;QAAA,SADF,eAEE,QAAC,WAAD;UAAa,KAAK,EAAEA;QAApB;UAAA;UAAA;UAAA;QAAA,SAFF;MAAA,gBADF;IAMD;EAVH;IAAA;IAAA;IAAA;EAAA,SADF;AAcD,CAtCD;;AAwCA,eAAelB,kBAAf"},"metadata":{},"sourceType":"module"}